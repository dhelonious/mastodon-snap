user $DAEMON_USER;
daemon off;
worker_processes 1;
pid $NGINX_PID_FILE;
error_log $LOG_DIR/nginx.log;

events {
  worker_connections 768;
}

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  default_type application/octet-stream;
  gzip on;

  proxy_cache_path $NGINX_CACHE levels=1:2 keys_zone=CACHE:10m inactive=7d max_size=1g;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    "" close;
  }

  map $remote_addr $remote_addr_network {
    ~(?P<ip>\d+\.\d+\.\d+)\. $ip.0;
    ~(?P<ip>[^:]+:[^:]+): $ip::;
    127.0.0.1 $remote_addr;
    ::1 $remote_addr;
    default 0.0.0.0;
  }

  map $http_x_forwarded_for $http_x_forwarded_for_network {
    ~(?P<ip>\d+\.\d+\.\d+)\. $ip.0;
    ~(?P<ip>[^:]+:[^:]+): $ip::;
    127.0.0.1 $http_x_forwarded_for;
    ::1 $http_x_forwarded_for;
    default -;
  }

  log_format standard '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
  log_format private '$remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';
  log_format network '$remote_addr_network - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for_network"';

  upstream backend {
    server 127.0.0.1:3000 fail_timeout=0;
  }

  upstream streaming {
    least_conn;
    server 127.0.0.1:4000 fail_timeout=0;
  }

  include $SNAP/nginx/mime.types;

  include mastodon-http*.conf;
}
