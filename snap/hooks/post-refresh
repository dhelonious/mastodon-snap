#!/bin/bash -e

. "$SNAP/snap.env"
set_default_settings

export CURRENT_SNAP_VERSION="$(get_snap_version_file)"

# NOTE: This is a fix for older versions and may be removed in the future
echo Set permissions on log dir
fix_daemon_user "$LOG_DIR"

# Postgres

. "$SNAP/postgres.env"

# NOTE: This is a fix for older versions and may be removed in the future
echo Set permissions on postgres files and dirs
fix_daemon_user "$SNAP_DATA/postgres"
fix_daemon_user "$PG_SOCK_DIR"
fix_daemon_user "$PG_LOG_FILE"
if [ -d "$PG_DATA_DIR" ]; then
    run_as_daemon_user chmod 700 "$PG_DATA_DIR" -R
fi

export CURRENT_PG_VERSION="$(get_postgres_version_file)"

echo Update postgres config
copy_config_as_daemon_user postgres postgresql.conf

if [ "$PG_VERSION" != "$CURRENT_PG_VERSION" ]; then
    if [ -f "$SNAP_COMMON/database.sql" ]; then
        echo Update postgres data
        snapctl stop "$SNAP_NAME.postgres"
        run_as_daemon_user rm -rf "$SNAP_DATA/postgres/data"
        run_as_daemon_user mkdir -m 0700 "$SNAP_DATA/postgres/data"
        setup_postgres_database
        postgres_waitready
        psql.wrapper -f "$SNAP_COMMON/database.sql" template1 > /dev/null
        rm -f "$SNAP_COMMON/database.sql"
    fi
else
    enable_postgres_config
    snapctl start "$SNAP_NAME.postgres"
fi

# Redis

# NOTE: This is a fix for older versions and may be removed in the future
echo Set permissions on redis files and dirs
fix_daemon_user "$SNAP_DATA/redis"
fix_daemon_user "$SOCK_DIR/redis.sock"
fix_daemon_user "$LOG_DIR/redis.log"

echo Update redis config
copy_config_as_daemon_user redis redis.conf

# Mastodon

. "$SNAP/mastodon.env"

# NOTE: This is a fix for older versions and may be removed in the future
echo Set permissions on mastodon files and dirs
fix_daemon_user "$SNAP_DATA/mastodon"
fix_daemon_user "$LOG_DIR/backend.log"
fix_daemon_user "$LOG_DIR/streaming.log"
fix_daemon_user "$LOG_DIR/sidekiq.log"
if mastodon_config_exists; then
    chmod 664 "$SNAP_COMMON/mastodon.conf"
fi

if [ "$SNAP_VERSION" != "$CURRENT_SNAP_VERSION" ]; then
    echo Update mastodon
    update_mastodon_files

    if mastodon_config_exists; then
        echo Update mastodon config
        link_mastodon_config
        upgrade_mastodon_config

        migration_required
    fi
fi

echo Add update announcement
mastodon_announcement "The mastodon-server snap has been updated to version $SNAP_VERSION"

# Nginx

. "$SNAP/nginx.env"

# NOTE: This is a fix for older versions and may be removed in the future
echo Set permissions on nginx files and dirs
fix_daemon_user "$SNAP_DATA/nginx"
fix_daemon_user "$SNAP_COMMON/.well-known"
fix_daemon_user "$NGINX_CACHE_DIR"
fix_daemon_user "$NGINX_LOG_FILE"
fix_daemon_user "$NGINX_ACCESS_LOG_FILE"

echo Update nginx configs
copy_nginx_configs

# Acme

# NOTE: This is a fix for older versions and may be removed in the future
echo Set permissions on acme dir
fix_daemon_user "$SNAP_DATA/acme"

# Logrotate

echo Update logrotate config
copy_config logrotate logrotate.conf

update_bundle_path
update_snap_version_file
update_postgres_version_file

# Clean update backups
find "$UPDATE_BACKUP_DIR" -mindepth 1 -maxdepth 1 -type d -printf "%T@ %p\n" \
    | sort -g | head -n -1 | cut -d " " -f2 | xargs -r rm -rf
