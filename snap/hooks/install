#!/bin/bash -e

. "$SNAP/snap.env"
. "$SNAP/debug.env"

begin_debug install
trap end_debug EXIT

reset_restart_required redis
reset_restart_required postgres
reset_restart_required backend
reset_restart_required sidekiq
reset_restart_required streaming
reset_restart_required nginx

update_snap_version_file
set_default_settings

mkdir -pm 0750 "$SECRET_DIR"
chown root:$DAEMON_USER "$SECRET_DIR"
mkdir -p "$UPDATE_DIR" "$UPDATE_BACKUP_DIR" "$DEFAULT_BACKUP_DIR"
mkdir_for_daemon_user "$CERT_DIR"
mkdir_for_daemon_user "$DEFAULT_MEDIA_DIR"
mkdir_for_daemon_user "$LOG_DIR"

# Secrets

export PG_PASSWORD=$(generate_secret postgres)
# export REDIS_PASSWORD=$(generate_secret redis)

# Postgres

echo Install postgres
. "$SNAP/postgres.env"

mkdir_for_daemon_user "$PG_HOME"

copy_config_as_daemon_user postgres postgresql.conf
setup_postgres_database

update_postgres_version_file

# Redis

echo Install redis
. "$SNAP/redis.env"

mkdir_for_daemon_user "$REDIS_HOME"

copy_config_as_daemon_user redis redis.conf

# Mastodon

echo Install mastodon
. "$SNAP/mastodon.env"

mkdir_for_daemon_user "$MASTODON_HOME"

reset_compilation_required

copy_mastodon_server_config
update_mastodon_files
update_backup_dir_file

# Nginx

echo Install nginx
. "$SNAP/nginx.env"

mkdir_for_daemon_user "$NGINX_HOME" "$NGINX_DATA"
mkdir_for_daemon_user "$SNAP_COMMON/.well-known"

copy_nginx_configs

# Acme

echo Install acme
. "$SNAP/acme.env"

mkdir_for_daemon_user "$ACME_HOME"

cd $SNAP/acme && run_as_daemon_user $SNAP/acme/acme.sh \
    --install --nocron --noprofile \
    --home "$ACME_HOME" \
    --config-home "$ACME_CONFIG" \
    --cert-home "$CERT_DIR"

# Logrotate

echo Install logrotate
. "$SNAP/logrotate.env"

copy_config logrotate logrotate.conf
